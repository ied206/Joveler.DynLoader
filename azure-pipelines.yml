# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

strategy:
  matrix:
    windows:
      imageName: 'windows-latest'
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-latest'

trigger:
  branches:
    include:
    - master
    - develop
    - ciconf

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 2.1'
  inputs:
    packageType: 'sdk'
    version: '2.1.x'
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 3.1'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
- task: UseDotNet@2
  displayName: 'Install .NET SDK 5.0'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'
- task: DotNetCoreCLI@2
  displayName: 'Restore Nuget Pacakges'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'Build Projects'
- task: DotNetCoreCLI@2
  displayName: 'Run Tests'
  inputs:
    command: 'test'
    projects: '**/*.Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --logger="console;verbosity=detailed" --collect:"XPlat Code Coverage" --settings:"$(Build.SourcesDirectory)/coverlet.runsettings"'
- task: PublishTestResults@2
  displayName: 'Publish Test Report'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/*.trx'
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
